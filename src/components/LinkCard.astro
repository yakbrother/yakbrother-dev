---
interface Props {
  type: 'video' | 'article' | 'website' | 'book' | 'tool';
  title: string;
  description?: string;
  publicationDate: Date;
  link: string;
}

const { 
  type = 'article',
  title, 
  description, 
  publicationDate,
  link
} = Astro.props;

const iconTypes = {
  video: `<path d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
         <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />`,
  article: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9.5a2.5 2.5 0 00-2.5-2.5H15" />`,
  website: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />`,
  book: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />`,
  tool: `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
         <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />`
};

const date = new Date(publicationDate);
const formattedDate = date.toLocaleDateString('en-UK', {
  year: 'numeric',
  month: 'short',
  day: 'numeric'
});
---

<a 
  href={link}
  class:list={['link-card']}
  target="_blank"
  rel="noopener noreferrer"
>
  <div class:list={['icon-container', type]}>
    <svg 
      class="type-icon" 
      viewBox="0 0 24 24" 
      fill="none" 
      stroke="currentColor"
      stroke=2
      set:html={iconTypes[type]}
    />
  </div>
  
  <div class="content">
    <p class="title">{title}</p>
    {
      description && (<p class="description">{description}</p>)
    }
    <div class="meta">
      <time datetime={date.toISOString()}>{formattedDate}</time>
      <div class="external-link">
        <svg 
          class="external-icon" 
          viewBox="0 0 24 24" 
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round" 
          stroke-linejoin="round"
          fill="none"
        >
          <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
          <polyline points="15 3 21 3 21 9" />
          <line x1="10" y1="14" x2="21" y2="3" />
        </svg>
      </div>
    </div>
  </div>
</a>

<style>
  .link-card {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    cursor: pointer;
    padding: 1rem;
    transition: all 0.3s ease;
    text-decoration: none;
    color: var(--color-dark);
    background-color: var(--color-card);
    border-radius: 0;
    border: none;
    width: 100%;
    box-sizing: border-box;
  }

  .icon-container {
    flex-shrink: 0;
    width: 24px;
    height: 24px;
    border-radius: 0.375rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.5s ease;
  }

  .link-card:hover .icon-container {
    transform: rotate(360deg);
  }

  .link-card:hover {
    background-color: var(--color-pink-hover);
    color: var(--color-dark);
    box-shadow: var(--shadow-hover);
  }

  .link-card:hover .description,
  .link-card:hover .meta time,
  .link-card:hover .meta .external-link {
    color: var(--color-dark);
  }

  .icon-container.video {
    color: var(--color-list-video);
  }

  .icon-container.article {
    color: var(--color-list-article);
  }

  .icon-container.website {
   color: var(--color-list-website);
  }

  .icon-container.book {
    color: var(--color-list-book);
  }

  .icon-container.tool {
    color: var(--color-list-tool);
  }

  .type-icon {
    width: 24px;
    height: 24px;
  }

  .content {
    flex: 1;
    min-width: 0;
    width: 100%;
  }

  .title {
    margin: 0 0 0.25rem 0;
    font-size: var(--step-0);
    font-weight: 600;
    color: var(--color-dark);
    word-wrap: break-word;
    overflow-wrap: anywhere;
  }

  .description {
    margin: 0 0 0.5rem 0;
    font-size: var(--step--1);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    color: var(--color-mid);
    word-wrap: break-word;
  }

  .meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 0.5rem;
    margin-top: 0.5rem;
    width: 100%;
  }

  time {
    font-size: var(--step--1);
    color: var(--color-mid);
    flex-shrink: 0;
  }

  .external-link {
    flex-shrink: 0;
    width: 20px;
    height: 20px;
    border-radius: 0.375rem;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--color-mid);
  }

  .external-icon {
    width: 16px;
    height: 16px;
  }
</style>
